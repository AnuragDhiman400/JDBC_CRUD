import edu.duke.*;
import java.io.File;

public class PerimeterAssignmentRunner {
    public double getPerimeter (Shape s) {
        // Start with totalPerim = 0
        double totalPerim = 0.0;
        // Start wth prevPt = the last point 
        Point prevPt = s.getLastPoint();
        // For each point currPt in the shape,
        for (Point currPt : s.getPoints()) {
            // Find distance from prevPt point to currPt 
            double currDist = prevPt.distance(currPt);
            // Update totalPerim by currDist
            totalPerim = totalPerim + currDist;
            // Update prevPt to be currPt
            prevPt = currPt;
        }
        // totalPerim is the answer
        return totalPerim;
    }

    public int getNumPoints (Shape s) {
        int total = 0;
        for (Point p : s.getPoints()){
            total++;
            System.out.println(p);
        }   
        return total;
    }

  public double getAverageLength(Shape s) {
        double average = getPerimeter(s)/ getNumPoints(s);
        return average;
    }
    

    public double getLargestSide(Shape s) {
        double prevPoint = 0.0;
        
        Point prevPt = s.getLastPoint();
        
             for (Point currPt : s.getPoints()) {
                double currDist = prevPt.distance(currPt);
                if(currDist > prevPoint)
                {
                prevPoint = currDist;
                }
    }
      return prevPoint;
}
    public double getLargestX(Shape s) {
        double totalPerim = 0.0;
        for (Point currPt : s.getPoints()) {
           
            double currDist = currPt.getX();
            
            if(totalPerim < currDist)
            {
            totalPerim = currDist;
            }
           
        }
       
        return totalPerim;
    }

   
   public double getLargestPerimeterMultipleFiles() {
         DirectoryResource dr = new DirectoryResource();
           double prevPer=0;
     for (File f : dr.selectedFiles()) {
          FileResource fr = new FileResource(f);
          Shape s = new Shape(fr); 
          double parimeter = getPerimeter(s);
          System.out.println(" perimeter = " + parimeter);
          if(prevPer < parimeter)
          {
            prevPer = parimeter;
          }
        } 
      
        return prevPer;
    }

    public String getFileWithLargestPerimeter() {

        DirectoryResource dr = new DirectoryResource();
           double prevPer=0;
         String file = null;
     for (File f : dr.selectedFiles()) {
          FileResource fr = new FileResource(f);
          Shape s = new Shape(fr); 
          double parimeter = getPerimeter(s);
          System.out.println(" perimeter = " + parimeter);
          if(prevPer < parimeter)
          {
            prevPer = parimeter;
            file = f.getName();
          }   
        } 
        return file;
    }

    public void testPerimeter () {
        FileResource fr = new FileResource();
        Shape s = new Shape(fr);
        double length = getPerimeter(s);
        int result = getNumPoints (s);
         double length1 = getLargestX(s);
	double largestSide = getLargestSide(s);
	 double average = getAverageLength(s);
        System.out.println("perimeter = " + length);
         System.out.println("Number Of Points " + result);
         System.out.println("Largest X = " + length1);
         System.out.println("Largest Side = " + largestSide);
           System.out.println("Average = " + average);
    }
    
    public void testPerimeterMultipleFiles() {
        double per = getLargestPerimeterMultipleFiles();
        System.out.println("Largest Perimeter of all Files = " + per);
    }


    public void testFileWithLargestPerimeter() {
        
        String per = getFileWithLargestPerimeter();	    
        System.out.println("largest perimeter File  = " + per);
    }

    // This method creates a triangle that you can use to test your other methods
    public void triangle(){
        Shape triangle = new Shape();
        triangle.addPoint(new Point(0,0));
        triangle.addPoint(new Point(6,0));
        triangle.addPoint(new Point(3,6));
        for (Point p : triangle.getPoints()){
            System.out.println(p);
        }
        double peri = getPerimeter(triangle);
        System.out.println("perimeter = "+peri);
    }

    // This method prints names of all files in a chosen folder that you can use to test your other methods
    public void printFileNames() {
        DirectoryResource dr = new DirectoryResource();
        for (File f : dr.selectedFiles()) {
            System.out.println(f);
        }
    }

    public static void main (String[] args) {
        
        PerimeterAssignmentRunner pr = new PerimeterAssignmentRunner();
        pr.testPerimeter();
        pr.testPerimeterMultipleFiles();
        pr.testFileWithLargestPerimeter();
    }
}
